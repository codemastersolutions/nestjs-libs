name: Pull Request Tests

on:
  pull_request:
    branches: [main, dev]
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test Node ${{ matrix.node-version }} - NestJS ${{ matrix.nestjs-version }} - ${{ matrix.adapter }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [20, 22, 24]
        nestjs-version: [10, 11]
        adapter: [express, fastify]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install NestJS ${{ matrix.nestjs-version }}
        run: |
          pnpm add -D @nestjs/core@^${{ matrix.nestjs-version }} @nestjs/common@^${{ matrix.nestjs-version }} @nestjs/testing@^${{ matrix.nestjs-version }}
          
      - name: Install adapter dependencies
        run: |
          if [ "${{ matrix.adapter }}" = "express" ]; then
            pnpm add -D @nestjs/platform-express
          else
            pnpm add -D @nestjs/platform-fastify
          fi
          
      - name: Run linting
        run: pnpm run lint
        
      - name: Run tests
        run: pnpm test
        env:
          ADAPTER: ${{ matrix.adapter }}
          
      - name: Run e2e tests
        run: pnpm run test:e2e
        env:
          ADAPTER: ${{ matrix.adapter }}
          
  # Job para verificar se todos os testes passaram
  test-results:
    name: Test Results
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "Tests failed. Pull request cannot be merged."
            exit 1
          else
            echo "All tests passed successfully!"
          fi
          
  # Job para verificar a cobertura de c√≥digo
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run tests with coverage
        run: pnpm test -- --coverage --coverageReporters=text-lcov
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false